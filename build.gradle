plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.pieceofcake'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2025.0.0-RC1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// eureka
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	//	jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// coolsms
	implementation 'net.nurigo:sdk:4.3.2'
	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
